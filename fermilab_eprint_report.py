import re
from invenio.search_engine import perform_request_search
from invenio.search_engine import get_fieldvalues
from invenio.bibformat_engine import BibFormatObject
import invenio.bibformat_elements.bfe_INSPIRE_arxiv as bfe_arxiv

VERBOSE = True
VERBOSE = False

reports = [
'FERMILAB-PUB-08-716-CMS',
'FERMILAB-PUB-07-807-CMS',
'FERMILAB-PUB-07-808-CMS',
'FERMILAB-PUB-07-809-CMS',
'FERMILAB-PUB-06-592-CMS',
'FERMILAB-CONF-14-097-E',
'FERMILAB-PUB-14-112-PPD',
'FERMILAB-CONF-13-648',
'FERMILAB-TEST-14-001-AE-DI',
'FERMILAB-TEST-14-002-BSS',
'FERMILAB-CONF-14-149-AD',
'FERMILAB-PUB-14-153-CMS',
'FERMILAB-PUB-14-156-TD',
'FERMILAB-PUB-14-158-TD',
'FERMILAB-PUB-14-159-TD',
'FERMILAB-TM-2585',
'FERMILAB-CONF-14-221-APC',
'FERMILAB-TEST-14-003-ESH',
'FERMILAB-PUB-08-717-E',
'FERMILAB-PUB-14-300-T',
'FERMILAB-CONF-03-538-TD',
'FERMILAB-PUB-13-670',
'FERMILAB-PUB-13-672-TD',
'FERMILAB-PUB-00-408-T',
'FERMILAB-PUB-13-681-A',
'FERMILAB-PUB-06-613-T',
'FERMILAB-TEST-14-006-ND',
'FERMILAB-CONF-14-453-PPD',
'FERMILAB-PUB-14-468-A',
'FERMILAB-TM-2592-AD-APC',
'FERMILAB-FN-0994-PPD',
'FERMILAB-TM-2594',
'FERMILAB-TEST-15-006-FESS',
'FERMILAB-CONF-15-017-CD-ND',
'FERMILAB-FN-0997-ND-T',
'FERMILAB-CONF-15-046-E',
'FERMILAB-PUB-15-056-A',
'FERMILAB-PUB-15-079-E',
'FERMILAB-PUB-15-119-CMS',
'FERMILAB-CONF-15-146-AD',
'FERMILAB-CONF-15-147-AD',
'FERMILAB-PUB-14-571-PPD',
'FERMILAB-CONF-15-154-CD',
'FERMILAB-CONF-15-155-CD',
'FERMILAB-CONF-15-157-CD',
'FERMILAB-CONF-15-158-CD',
'FERMILAB-TM-2600-CD',
'FERMILAB-TM-2601-CD',
'FERMILAB-TM-2602-CD',
'FERMILAB-CONF-15-167-APC',
'FERMILAB-CONF-15-172-ND',
'FERMILAB-CONF-15-193-CD',
'FERMILAB-CONF-15-204-ND',
'FERMILAB-TM-2604-CD',
'FERMILAB-CONF-15-217-ND',
'FERMILAB-CONF-15-219-CD',
'FERMILAB-CONF-15-221-ND',
'FERMILAB-CONF-15-242-ND',
'FERMILAB-CONF-15-266-TD',
'FERMILAB-CONF-15-270-AD',
'FERMILAB-CONF-15-316-TD',
'FERMILAB-PUB-15-317-AD',
'FERMILAB-CONF-15-344-AD',
'FERMILAB-CONF-15-360-PPD',
'FERMILAB-PUB-15-367-APC',
'FERMILAB-CONF-15-369-AD',
'FERMILAB-CONF-15-412-AD-TD',
'FERMILAB-PUB-15-421-CMS',
'FERMILAB-PUB-15-441-AE',
'FERMILAB-TEST-15-007-CD',
'FERMILAB-CONF-15-481-CD-T',
'FERMILAB-PUB-15-515-CMS',
'FERMILAB-CONF-14-580-ND',
'FERMILAB-CONF-15-564-ND',
'FERMILAB-PUB-08-729-CMS',
'FERMILAB-PUB-16-004-T',
'FERMILAB-CONF-15-620-ND',
'FERMILAB-PUB-16-021-AE',
'FERMILAB-FN-1007-CD',
'FERMILAB-CONF-16-078-PPD',
'FERMILAB-PUB-16-112-ND',
'FERMILAB-TEST-16-001-LDRD',
'FERMILAB-TM-2626-CMS-E',
'FERMILAB-CONF-16-167-FESS',
'FERMILAB-PUB-16-170-CD',
'FERMILAB-PUB-16-191-CMS',
'FERMILAB-PUB-16-193-CMS',
'FERMILAB-FN-1018-TD',
'FERMILAB-CONF-16-236-AD',
'FERMILAB-PUB-16-248-TD',
'FERMILAB-PUB-16-249-TD',
'FERMILAB-PUB-16-256-CMS',
'FERMILAB-TM-2629-APC',
'FERMILAB-CONF-16-295-E',
'FERMILAB-TM-2632-ND-PPD',
'FERMILAB-TM-2633-CMS-E-PPD',
'FERMILAB-CONF-16-324-AD-DI',
'FERMILAB-FN-1022-E',
'FERMILAB-PUB-16-330',
'FERMILAB-CONF-16-331',
'FERMILAB-PUB-16-334-A',
'FERMILAB-CONF-16-357-TD',
'FERMILAB-CONF-16-358-TD',
'FERMILAB-CONF-16-360-AD',
'FERMILAB-TEST-16-002-CD',
'FERMILAB-PUB-16-371-ND',
'FERMILAB-PUB-16-376-CMS',
'FERMILAB-PUB-16-378-CMS',
'FERMILAB-CONF-16-390-TD',
'FERMILAB-PUB-16-399-TD',
'FERMILAB-CONF-16-401-ND',
'FERMILAB-PUB-16-403-CMS',
'FERMILAB-PUB-16-407-CD',
'FERMILAB-PUB-16-409-APC',
'FERMILAB-CONF-16-410-AD',
'FERMILAB-PUB-16-420-A',
'FERMILAB-TM-2638',
'FERMILAB-CONF-16-431-AD',
'FERMILAB-CONF-16-437-AD',
'FERMILAB-CONF-16-439-AD',
'FERMILAB-CONF-16-446-AD',
'FERMILAB-PUB-16-454-AE',
'FERMILAB-CONF-16-462-APC',
'FERMILAB-PUB-16-475-CMS',
'FERMILAB-PUB-16-560',
'FERMILAB-PUB-16-566-AD',
'FERMILAB-PUB-16-568',
'FERMILAB-PUB-16-598-AD-APC',
'FERMILAB-PUB-16-614-AE',
'FERMILAB-TM-2642-ND',
'FERMILAB-TEST-17-001-LBNF',
'FERMILAB-CONF-16-628-ND',
'FERMILAB-PUB-16-636-CMS',
'FERMILAB-TEST-17-002-LBNF',
'FERMILAB-CONF-17-022-AD',
'FERMILAB-PUB-17-025-AE',
'FERMILAB-PUB-17-026-CD',
'FERMILAB-PUB-17-034-CMS-E',
'FERMILAB-CONF-17-036-TD',
'FERMILAB-PUB-17-042-PPD',
'FERMILAB-POSTER-17-002-CD',
'FERMILAB-PUB-16-662-CMS',
'FERMILAB-CONF-15-658-CMS',
'FERMILAB-CONF-15-659-CMS',
'FERMILAB-CONF-15-660-CMS',
'FERMILAB-CONF-14-592-CMS',
'FERMILAB-CONF-14-593-CMS',
'FERMILAB-CONF-14-594-CMS',
'FERMILAB-CONF-14-595-CMS',
'FERMILAB-POSTER-17-003-DI',
'FERMILAB-PUB-17-077-T',
'FERMILAB-SLIDES-17-003-CD',
'FERMILAB-POSTER-17-004-DI',
'FERMILAB-SLIDES-17-004-LDRD',
'FERMILAB-SLIDES-17-005-FESS',
'FERMILAB-POSTER-17-005-CMS',
'FERMILAB-POSTER-17-006-AE',
'FERMILAB-POSTER-17-007-ESH',
'FERMILAB-TM-2650-E',
'FERMILAB-TM-2651-E',
'FERMILAB-TEST-17-003-LDRD',
'FERMILAB-PUB-16-667-PPD',
'FERMILAB-PUB-17-088',
'FERMILAB-PUB-17-092-CD',
'FERMILAB-PUB-17-099-APC',
'FERMILAB-PUB-17-113-CMS',
'FERMILAB-PUB-17-120-CMS',
'FERMILAB-POSTER-17-010-TD',
'FERMILAB-SLIDES-17-007-TD',
'FERMILAB-CONF-17-127-ND',
'FERMILAB-CONF-17-130-PPD',
'FERMILAB-SLIDES-17-008-TD',
'FERMILAB-PUB-17-136-PPD',
'FERMILAB-CONF-14-597-ND',
'FERMILAB-CONF-17-141-APC',
'FERMILAB-CONF-17-142-AD',
'FERMILAB-PUB-17-150-T',
'FERMILAB-PUB-17-152-T',
'FERMILAB-CONF-17-153-AD',
'FERMILAB-CONF-17-155-AD',
'FERMILAB-CONF-17-157-AD',
'FERMILAB-CONF-17-158-ND',
'FERMILAB-POSTER-17-012-AD',
'FERMILAB-PUB-17-168-PPD',
'FERMILAB-PUB-17-169-T',
'FERMILAB-PUB-17-173-A',
'FERMILAB-PUB-17-179-PPD',
'FERMILAB-PUB-17-180-AE',
'FERMILAB-PUB-17-183-AE-E-PPD',
'FERMILAB-CONF-17-184-LBNF',
'FERMILAB-PUB-17-185-AD-ND',
'FERMILAB-PUB-17-186-E',
'FERMILAB-CONF-16-686-CD-PPD',
'FERMILAB-FN-1032-APC'
]

BAD_RECIDS = [1340468, 1278565]

def get_eprint(r):
    report_fermilab = ''
    eprint = ''
    reports = get_fieldvalues(r,'037__a')
    reports = reports + get_fieldvalues(r,'037__z')
    if VERBOSE:
        print reports
    for report in reports:
        if re.search("FERMILAB", report):
            report_fermilab = report
            if VERBOSE:
                print report_fermilab
    bfo = BibFormatObject(r)
    eprint = bfe_arxiv.get_arxiv(bfo, category = "no")
    if VERBOSE:
        print eprint
    if eprint: 
        eprint = eprint[0]
        if report_fermilab:
            print report_fermilab, eprint


for report in reports:
    search = "037:" + report
    result = perform_request_search(p=search,cc='HEP')    
    if len(result) == 1:
        recid = result[0]
        if recid in BAD_RECIDS:
            continue
        else:
            get_eprint(recid)
    elif len(result) == 0:
        pass
    else:
        print "Something funny here ", report , len(result)


